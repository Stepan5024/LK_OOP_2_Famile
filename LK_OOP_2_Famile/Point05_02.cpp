/******************************************************************\
*                                                                  *
* Comment(s)    : РЕАЛИЗАЦИЯ ДВУХ КЛАССОВ. НАСЛЕДОВАНИЕ            *
*                                                                  *
\******************************************************************/

#include <windows.h>
#include "Point05_02.h" // подключили заголовочный файл с классом Point

HWND   hwnd;     //  Объявим дескриптор (описатель) окна
extern HDC    hdc;      // объявим  контекст устройства. Глобальная переменная с внешним контекстом


/*------------------------------------------------------------------*/
/*                 Р Е А Л И З А Ц И Я    М Е Т О Д О В             */
/*------------------------------------------------------------------*/
			/*----------------------------------------*/
			/*        МЕТОДЫ КЛАССА Location          */
			/*----------------------------------------*/
Location::Location(int InitX, int InitY) // конструктор класса Location
{
	X = InitX; // инициализация X координаты класса Location
	Y = InitY; // инициализация Y координаты класса Location
}; // Location

Location::~Location()  // формально пустое тело
{
}; // ~Location

int Location::GetX(void) { return X; }; // получить значение поля X класса Location
int Location::GetY(void) { return Y; }; // получить значение поля Y класса Location


		/*----------------------------------------*/
		/*        МЕТОДЫ КЛАССА Point             */
		/*----------------------------------------*/
Point::Point(int InitX, int InitY) : Location(InitX, InitY) // конструктор класса Point, наследника класса Location
{
	Visible = false; // по умолчанию Видимость False
} // Point

Point::~Point(void)   //формально пустое тело
{
} // ~Point

void Point::Show(void) // сделать светимость точки
{
	Visible = true; // рисуем 4 точки на экране
	SetPixel(hdc, X, Y, RGB(255, 0, 0));   //рисуем установленным цветом
	SetPixel(hdc, X + 1, Y, RGB(255, 0, 0)); // красный цвет - активная точка
	SetPixel(hdc, X, Y + 1, RGB(255, 0, 0)); // красный цвет - активная точка
	SetPixel(hdc, X + 1, Y + 1, RGB(255, 0, 0)); // красный цвет - активная точка
} // Show

void Point::Hide() // спрятать видимость точки
{
	Visible = false; // скрыть 4 точки
	SetPixel(hdc, X, Y, RGB(0, 0, 255)); //рисуем цветом фона
	SetPixel(hdc, X + 1, Y, RGB(0, 0, 255)); // синий цвет - неактивная точка
	SetPixel(hdc, X, Y + 1, RGB(0, 0, 255)); // синий цвет - неактивная точка
	SetPixel(hdc, X + 1, Y + 1, RGB(0, 0, 255)); // синий цвет - неактивная точка
} // hide

bool Point::IsVisible(void) { return Visible; }; // узнать про светимость точки

void Point::MoveTo(int NewX, int NewY) // поставить новые координаты точке
{
	Hide();  // сделать точку невидимой
	X = NewX; // поменять координаты
	Y = NewY;
	Show();  //показать точку на новом месте
}; // MoveTo

/*********************  END OF FILE Point05_02.CPP   *****************/